# Python standard library
from os.path import join
from os import listdir
import os, sys

# 3rd party imports from pypi
from snakemake.workflow import workflow as wf_api

# Local imports
from scripts.common import (
    allocated,
    provided,
    references,
    str_bool
)

# Global workflow variables
configfile: 'config.json'                      # Generated from user input and config/*.json
input_vcf  = config['options']['gvcf']
covariates = config['options']['covariates']
phenotype  = config['options']['phenotypes']
workpath   = config['options']['output']
SAMPLES    = []
with open(covariates, 'r') as fh:
    header = next(fh)
    for line in fh:
        sample = line.strip().split('\t')[0]
        SAMPLES.append(sample)
#chromosomes = ['X']
#chromosomes.extend(range(1, 23))

# Final ouput files of the pipeline
# Rule DAG built from listed here
rule all:
    input:
        # Somalier extract
        expand(join(workpath, "somalier", "{sample}.somalier"), sample=SAMPLES),
        join(workpath, "somalier", "relatedness.samples.tsv"),
        join(workpath, "somalier", "ancestry.somalier-ancestry.tsv"),
        # Covariates
        join(workpath,"regenie", "covariates.txt"),
        # annotate using vep
        join(workpath, "vep", "vep.vcf.gz"),
        join(workpath, "vep", "vep.vcf.gz.tbi"),
        # filter with slivar
        join(workpath, "slivar",'slivar' + config['slivar']['gnomad_af1'] + ".vcf.gz"),
        join(workpath, "slivar", 'slivar'  + config['slivar']['gnomad_af1'] + ".vcf.gz.tbi"),
        join(workpath, "slivar", 'slivar' + config['slivar']['gnomad_af1'] + ".txt"),
        join(workpath, "slivar", 'slivar' + config['slivar']['gnomad_af1']),
        join(workpath, "slivar",'slivar' + config['slivar']['gnomad_af2'] + ".vcf.gz"),
        join(workpath, "slivar", 'slivar'  + config['slivar']['gnomad_af2'] + ".vcf.gz.tbi"),
        join(workpath, "slivar", 'slivar' + config['slivar']['gnomad_af2']),
        join(workpath, "slivar", 'slivar' + config['slivar']['gnomad_af2'] + ".txt"),
        # prep annotation, list, and mask files for regenie
        join(workpath,"regenie", config['slivar']['gnomad_af1'] + ".annot"),
        join(workpath,"regenie", config['slivar']['gnomad_af2'] + ".annot"),
        join(workpath,"regenie", config['slivar']['gnomad_af1'] + ".list"),
        join(workpath,"regenie", config['slivar']['gnomad_af2'] + ".list"),
        join(workpath,"regenie", config['slivar']['gnomad_af1'] + ".masks"),
        join(workpath,"regenie", config['slivar']['gnomad_af2'] + ".masks"),
        # filtering QC for regenie step 1
      #  join(workpath, "QC", "cleaned.vcf.gz"),
      #  join(workpath, "QC", "cleaned.vcf.gz.tbi"),
      #  join(workpath, "QC", 'geno' + config['QC']['plink_filters']['geno'] + 'maf' + config['QC']['plink_filters']['maf'] + '.bed'),
      #  join(workpath, "regenie", 'filtered.bed'),
      #  join(workpath, "regenie", config['slivar']['gnomad_af1'] + '.bed'),
      #  join(workpath, "regenie", config['slivar']['gnomad_af1'] + '.bed'),
        # regenie outputs
      #  join(workpath, "regenie", 'step1'),
      #  expand(join(workpath, "regenie", 'step2_01_{chr}.regenie'), chr=chromosomes),
       # expand(join(workpath, "regenie", 'step2_05_{chr}.regenie'), chr=chromosomes),


# Import rules
include: join(workpath, "workflow", "rules", "somalier.smk")
include: join(workpath, "workflow", "rules", "vep_slivar.smk")
#include: join(workpath, "workflow", "rules", "filtering.smk")
#include: join(workpath, "workflow", "rules", "regenie.smk")
# extract sites
